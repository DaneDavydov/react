{"version":3,"sources":["components/Message.js","App.js","index.js"],"names":["Message","state","isLiked","counter","handleClick","bind","this","setState","props","name","logo","title","text","date","Date","displayDate","getDate","getMonth","getFullYear","btnClassName","className","src","alt","onClick","React","Component","App","userData","axios","get","then","res","data","results","to","path","exact","map","picture","location","id","first","last","thumbnail","country","city","key","value","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iVAiFeA,G,wDA7Eb,aAAe,IAAD,8BACZ,gBAEKC,MAAQ,CACXC,SAAS,EACTC,QAAS,GAGX,EAAKC,YAAc,EAAKA,YAAYC,KAAjB,gBARP,E,0DAWC,IAAD,EACeC,KAAKL,MAAzBC,EADK,EACLA,QAASC,EADJ,EACIA,QAChBG,KAAKC,SAAS,CAAEL,SAAUA,EAASC,QAASA,EAAU,M,+BAG9C,IAAD,EAC2BG,KAAKE,MAAhCC,EADA,EACAA,KAAMC,EADN,EACMA,KAAMC,EADZ,EACYA,MAAOC,EADnB,EACmBA,KADnB,EAEoBN,KAAKL,MAAzBC,EAFA,EAEAA,QAASC,EAFT,EAESA,QACVU,EAAO,IAAIC,KACXC,EAAW,UAAMF,EAAKG,UAAX,YAAwBH,EAAKI,WAAa,EAA1C,YAA+CJ,EAAKK,eAE/DC,EAAY,gCAA4BjB,EAAU,YAAc,IAEtE,OACE,yBAAKkB,UAAU,WACb,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,uBAAuBC,IAAKX,EAAMY,IAAI,KACrD,yBAAKF,UAAU,6BACb,uBAAGA,UAAU,wBAAwBX,GACrC,0BAAMW,UAAU,uBAAuBL,IAEzC,0BAAMK,UAAU,0BAA0BjB,GAC1C,4BACEiB,UAAWD,EACXI,QAASjB,KAAKF,eAGlB,yBAAKgB,UAAU,gBACb,wBAAIA,UAAU,sBACXT,GAEH,uBAAGS,UAAU,wBACVR,S,GA5CSY,IAAMC,YC+EbC,E,kDApEb,WAAYlB,GAAQ,IAAD,8BACjB,cAAMA,IAEDP,MAAQ,CACX0B,SAAU,IAJK,E,gEAQE,IAAD,OAClBC,IAAMC,IAZE,yCAaLC,MAAK,SAACC,GACL,EAAKxB,SAAU,CAAEoB,SAAUI,EAAIC,KAAKC,e,+BAIhC,IACAN,EAAarB,KAAKL,MAAlB0B,SACR,OACE,kBAAC,IAAD,KACE,yBAAKP,UAAU,cACb,wBAAIA,UAAU,mBACZ,wBAAIA,UAAU,mBACZ,kBAAC,IAAD,CAAMc,GAAG,KAAT,SAIF,wBAAId,UAAU,mBACZ,kBAAC,IAAD,CAAMc,GAAG,UAAT,UAIF,wBAAId,UAAU,mBACZ,kBAAC,IAAD,CAAMc,GAAG,WAAT,cAMN,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,KAAK,IAAIC,OAAK,GACnB,yBAAKhB,UAAU,OACZO,EAASU,KAAI,YAAoC,IAAlC5B,EAAiC,EAAjCA,KAAM6B,EAA2B,EAA3BA,QAASC,EAAkB,EAAlBA,SAAUC,EAAQ,EAARA,GACvC,OACE,kBAAC,EAAD,CACE/B,KAAI,UAAKA,EAAKgC,MAAV,YAAmBhC,EAAKiC,MAC5BhC,KAAM4B,EAAQK,UACdhC,MAAO4B,EAASK,QAChBhC,KAAM2B,EAASM,KACfC,IAAKN,EAAGO,aAMlB,kBAAC,IAAD,CAAOZ,KAAK,UAAZ,yCAGA,kBAAC,IAAD,CAAOA,KAAK,WAAZ,4E,GA1DQX,IAAMC,WCRxBuB,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.77765cc7.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Message.css'\r\n\r\nclass Message extends React.Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      isLiked: false,\r\n      counter: 0\r\n    };\r\n\r\n    this.handleClick = this.handleClick.bind(this);\r\n  }\r\n\r\n  handleClick() {\r\n    const {isLiked, counter} = this.state;\r\n    this.setState({ isLiked: !isLiked, counter: counter + 1})\r\n  }\r\n\r\n  render() {\r\n    const {name, logo, title, text} = this.props;\r\n    const {isLiked, counter} = this.state;\r\n    const date = new Date();\r\n    const displayDate = `${date.getDate()}/${date.getMonth() + 1}/${date.getFullYear()}`;\r\n\r\n    const btnClassName = `message-header-button ${isLiked ? 'is-active' : ''}`;\r\n\r\n    return (\r\n      <div className=\"message\">\r\n        <div className=\"message-header\">\r\n          <img className=\"message-header-image\" src={logo} alt=\"\" />\r\n          <div className=\"message-header-text_block\">\r\n            <p className=\"message-header-title\">{name}</p>\r\n            <span className=\"message-header-date\">{displayDate}</span>\r\n          </div>\r\n          <span className=\"message-header-counter\">{counter}</span>\r\n          <button\r\n            className={btnClassName}\r\n            onClick={this.handleClick}\r\n          />\r\n        </div>\r\n        <div className=\"message-body\">\r\n          <h2 className=\"message-body-title\">\r\n            {title}\r\n          </h2>\r\n          <p className=\"message-body-content\">\r\n            {text}\r\n          </p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n// function Message(props) {\r\n//   const {name, logo, title, text} = props;\r\n//   const date = new Date();\r\n//   const displayDate = `${date.getDate()}/${date.getMonth() + 1}/${date.getFullYear()}`;\r\n\r\n//   return (\r\n//     <div className=\"message\">\r\n//       <div className=\"message-header\">\r\n//         <img className=\"message-header-image\" src={logo} alt=\"\" />\r\n//         <div className=\"message-header-text_block\">\r\n//           <p className=\"message-header-title\">{name}</p>\r\n//           <span className=\"message-header-date\">{displayDate}</span>\r\n//         </div>\r\n//       </div>\r\n//       <div className=\"message-body\">\r\n//         <h2 className=\"message-body-title\">\r\n//           {title}\r\n//         </h2>\r\n//         <p className=\"message-body-content\">\r\n//           {text}\r\n//         </p>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\nexport default Message;\r\n","import React from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from 'react-router-dom';\nimport axios from 'axios'\nimport './App.css';\nimport Message from './components/Message';\n\nconst API = 'https://randomuser.me/api/?results=10';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      userData: [],\n    }\n  }\n\n  componentDidMount() {\n    axios.get(API)\n      .then((res) => {\n        this.setState( { userData: res.data.results });\n      });\n  }\n\n  render() {\n    const { userData } = this.state;\n    return (\n      <Router>\n        <nav className=\"navigation\">\n          <ul className=\"navigation-list\">\n            <li className=\"navigation-link\">\n              <Link to=\"/\">\n                Home\n              </Link>\n            </li>\n            <li className=\"navigation-link\">\n              <Link to=\"/hello\">\n                Hello\n              </Link>\n            </li>\n            <li className=\"navigation-link\">\n              <Link to=\"/signin\">\n                Sign In\n              </Link>\n            </li>\n          </ul>\n        </nav>\n        <Switch>\n          <Route path=\"/\" exact>\n            <div className=\"App\">\n              {userData.map(({name, picture, location, id}) => {\n                return (\n                  <Message\n                    name={`${name.first} ${name.last}`}\n                    logo={picture.thumbnail}\n                    title={location.country}\n                    text={location.city}\n                    key={id.value}\n                  />\n                );\n              })}\n            </div>\n          </Route>\n          <Route path=\"/hello\">\n            Привет!\n          </Route>\n          <Route path=\"/signin\">\n            Регистрация\n          </Route>\n        </Switch>\n      </Router>\n    );\n }\n\n\n}\n\nexport default App;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\n"],"sourceRoot":""}